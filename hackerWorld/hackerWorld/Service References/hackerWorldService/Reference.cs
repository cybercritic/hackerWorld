//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hackerWorldNS.HackerWorldService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardDrive", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class HardDrive : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DriveSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.ProgramHW> ProgramsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DriveSize {
            get {
                return this.DriveSizeField;
            }
            set {
                if ((this.DriveSizeField.Equals(value) != true)) {
                    this.DriveSizeField = value;
                    this.RaisePropertyChanged("DriveSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.ProgramHW> Programs {
            get {
                return this.ProgramsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramsField, value) != true)) {
                    this.ProgramsField = value;
                    this.RaisePropertyChanged("Programs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgramHW", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class ProgramHW : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BasePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HddSlotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsesLeftField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BasePrice {
            get {
                return this.BasePriceField;
            }
            set {
                if ((this.BasePriceField.Equals(value) != true)) {
                    this.BasePriceField = value;
                    this.RaisePropertyChanged("BasePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HddSlot {
            get {
                return this.HddSlotField;
            }
            set {
                if ((this.HddSlotField.Equals(value) != true)) {
                    this.HddSlotField = value;
                    this.RaisePropertyChanged("HddSlot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramDescription {
            get {
                return this.ProgramDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramDescriptionField, value) != true)) {
                    this.ProgramDescriptionField = value;
                    this.RaisePropertyChanged("ProgramDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramName {
            get {
                return this.ProgramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameField, value) != true)) {
                    this.ProgramNameField = value;
                    this.RaisePropertyChanged("ProgramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramSubType {
            get {
                return this.ProgramSubTypeField;
            }
            set {
                if ((this.ProgramSubTypeField.Equals(value) != true)) {
                    this.ProgramSubTypeField = value;
                    this.RaisePropertyChanged("ProgramSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramType {
            get {
                return this.ProgramTypeField;
            }
            set {
                if ((this.ProgramTypeField.Equals(value) != true)) {
                    this.ProgramTypeField = value;
                    this.RaisePropertyChanged("ProgramType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramVersion {
            get {
                return this.ProgramVersionField;
            }
            set {
                if ((this.ProgramVersionField.Equals(value) != true)) {
                    this.ProgramVersionField = value;
                    this.RaisePropertyChanged("ProgramVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsesLeft {
            get {
                return this.UsesLeftField;
            }
            set {
                if ((this.UsesLeftField.Equals(value) != true)) {
                    this.UsesLeftField = value;
                    this.RaisePropertyChanged("UsesLeft");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CPUload", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class CPUload : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.CPUslotHW> ProgramsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCPUslotsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.CPUslotHW> Programs {
            get {
                return this.ProgramsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramsField, value) != true)) {
                    this.ProgramsField = value;
                    this.RaisePropertyChanged("Programs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCPUslots {
            get {
                return this.TotalCPUslotsField;
            }
            set {
                if ((this.TotalCPUslotsField.Equals(value) != true)) {
                    this.TotalCPUslotsField = value;
                    this.RaisePropertyChanged("TotalCPUslots");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CPUslotHW", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class CPUslotHW : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CpuSlotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CpuSlot {
            get {
                return this.CpuSlotField;
            }
            set {
                if ((this.CpuSlotField.Equals(value) != true)) {
                    this.CpuSlotField = value;
                    this.RaisePropertyChanged("CpuSlot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramSubType {
            get {
                return this.ProgramSubTypeField;
            }
            set {
                if ((this.ProgramSubTypeField.Equals(value) != true)) {
                    this.ProgramSubTypeField = value;
                    this.RaisePropertyChanged("ProgramSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramType {
            get {
                return this.ProgramTypeField;
            }
            set {
                if ((this.ProgramTypeField.Equals(value) != true)) {
                    this.ProgramTypeField = value;
                    this.RaisePropertyChanged("ProgramType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramVersion {
            get {
                return this.ProgramVersionField;
            }
            set {
                if ((this.ProgramVersionField.Equals(value) != true)) {
                    this.ProgramVersionField = value;
                    this.RaisePropertyChanged("ProgramVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgramTypes", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class ProgramTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.ProgramHW> ProgramTypesLstField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.ProgramHW> ProgramTypesLst {
            get {
                return this.ProgramTypesLstField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramTypesLstField, value) != true)) {
                    this.ProgramTypesLstField = value;
                    this.RaisePropertyChanged("ProgramTypesLst");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompilerJob", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class CompilerJob : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BuddyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuddyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BuddyID {
            get {
                return this.BuddyIDField;
            }
            set {
                if ((this.BuddyIDField.Equals(value) != true)) {
                    this.BuddyIDField = value;
                    this.RaisePropertyChanged("BuddyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuddyName {
            get {
                return this.BuddyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuddyNameField, value) != true)) {
                    this.BuddyNameField = value;
                    this.RaisePropertyChanged("BuddyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramSubType {
            get {
                return this.ProgramSubTypeField;
            }
            set {
                if ((this.ProgramSubTypeField.Equals(value) != true)) {
                    this.ProgramSubTypeField = value;
                    this.RaisePropertyChanged("ProgramSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramType {
            get {
                return this.ProgramTypeField;
            }
            set {
                if ((this.ProgramTypeField.Equals(value) != true)) {
                    this.ProgramTypeField = value;
                    this.RaisePropertyChanged("ProgramType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramVersion {
            get {
                return this.ProgramVersionField;
            }
            set {
                if ((this.ProgramVersionField.Equals(value) != true)) {
                    this.ProgramVersionField = value;
                    this.RaisePropertyChanged("ProgramVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CpuSlotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HddSlotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserGoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserHatPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CpuSlots {
            get {
                return this.CpuSlotsField;
            }
            set {
                if ((this.CpuSlotsField.Equals(value) != true)) {
                    this.CpuSlotsField = value;
                    this.RaisePropertyChanged("CpuSlots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HddSlots {
            get {
                return this.HddSlotsField;
            }
            set {
                if ((this.HddSlotsField.Equals(value) != true)) {
                    this.HddSlotsField = value;
                    this.RaisePropertyChanged("HddSlots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserCash {
            get {
                return this.UserCashField;
            }
            set {
                if ((this.UserCashField.Equals(value) != true)) {
                    this.UserCashField = value;
                    this.RaisePropertyChanged("UserCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserGold {
            get {
                return this.UserGoldField;
            }
            set {
                if ((this.UserGoldField.Equals(value) != true)) {
                    this.UserGoldField = value;
                    this.RaisePropertyChanged("UserGold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserHatPoints {
            get {
                return this.UserHatPointsField;
            }
            set {
                if ((this.UserHatPointsField.Equals(value) != true)) {
                    this.UserHatPointsField = value;
                    this.RaisePropertyChanged("UserHatPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MissionList", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class MissionList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.MissionType> MissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.MissionType> Missions {
            get {
                return this.MissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MissionsField, value) != true)) {
                    this.MissionsField = value;
                    this.RaisePropertyChanged("Missions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MissionType", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class MissionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HatPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MissionPayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HatPoints {
            get {
                return this.HatPointsField;
            }
            set {
                if ((this.HatPointsField.Equals(value) != true)) {
                    this.HatPointsField = value;
                    this.RaisePropertyChanged("HatPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MissionID {
            get {
                return this.MissionIDField;
            }
            set {
                if ((this.MissionIDField.Equals(value) != true)) {
                    this.MissionIDField = value;
                    this.RaisePropertyChanged("MissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MissionPay {
            get {
                return this.MissionPayField;
            }
            set {
                if ((this.MissionPayField.Equals(value) != true)) {
                    this.MissionPayField = value;
                    this.RaisePropertyChanged("MissionPay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMission", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class UserMission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HaveAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HavePassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassStrengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramSubGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HaveAdmin {
            get {
                return this.HaveAdminField;
            }
            set {
                if ((this.HaveAdminField.Equals(value) != true)) {
                    this.HaveAdminField = value;
                    this.RaisePropertyChanged("HaveAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HavePass {
            get {
                return this.HavePassField;
            }
            set {
                if ((this.HavePassField.Equals(value) != true)) {
                    this.HavePassField = value;
                    this.RaisePropertyChanged("HavePass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MissionID {
            get {
                return this.MissionIDField;
            }
            set {
                if ((this.MissionIDField.Equals(value) != true)) {
                    this.MissionIDField = value;
                    this.RaisePropertyChanged("MissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedAdmin {
            get {
                return this.NeedAdminField;
            }
            set {
                if ((this.NeedAdminField.Equals(value) != true)) {
                    this.NeedAdminField = value;
                    this.RaisePropertyChanged("NeedAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassStrength {
            get {
                return this.PassStrengthField;
            }
            set {
                if ((this.PassStrengthField.Equals(value) != true)) {
                    this.PassStrengthField = value;
                    this.RaisePropertyChanged("PassStrength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramGroup {
            get {
                return this.ProgramGroupField;
            }
            set {
                if ((this.ProgramGroupField.Equals(value) != true)) {
                    this.ProgramGroupField = value;
                    this.RaisePropertyChanged("ProgramGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramSubGroup {
            get {
                return this.ProgramSubGroupField;
            }
            set {
                if ((this.ProgramSubGroupField.Equals(value) != true)) {
                    this.ProgramSubGroupField = value;
                    this.RaisePropertyChanged("ProgramSubGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramVersion {
            get {
                return this.ProgramVersionField;
            }
            set {
                if ((this.ProgramVersionField.Equals(value) != true)) {
                    this.ProgramVersionField = value;
                    this.RaisePropertyChanged("ProgramVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SlaveListHW", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class SlaveListHW : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.Slave> SlaveListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.Slave> SlaveList {
            get {
                return this.SlaveListField;
            }
            set {
                if ((object.ReferenceEquals(this.SlaveListField, value) != true)) {
                    this.SlaveListField = value;
                    this.RaisePropertyChanged("SlaveList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Slave", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class Slave : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.SlaveSlot> SlaveFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlaveIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdminPass {
            get {
                return this.AdminPassField;
            }
            set {
                if ((this.AdminPassField.Equals(value) != true)) {
                    this.AdminPassField = value;
                    this.RaisePropertyChanged("AdminPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.SlaveSlot> SlaveFiles {
            get {
                return this.SlaveFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.SlaveFilesField, value) != true)) {
                    this.SlaveFilesField = value;
                    this.RaisePropertyChanged("SlaveFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SlaveID {
            get {
                return this.SlaveIDField;
            }
            set {
                if ((this.SlaveIDField.Equals(value) != true)) {
                    this.SlaveIDField = value;
                    this.RaisePropertyChanged("SlaveID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserPass {
            get {
                return this.UserPassField;
            }
            set {
                if ((this.UserPassField.Equals(value) != true)) {
                    this.UserPassField = value;
                    this.RaisePropertyChanged("UserPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SlaveSlot", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class SlaveSlot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramSubGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlaveIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramGroup {
            get {
                return this.ProgramGroupField;
            }
            set {
                if ((this.ProgramGroupField.Equals(value) != true)) {
                    this.ProgramGroupField = value;
                    this.RaisePropertyChanged("ProgramGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramSubGroup {
            get {
                return this.ProgramSubGroupField;
            }
            set {
                if ((this.ProgramSubGroupField.Equals(value) != true)) {
                    this.ProgramSubGroupField = value;
                    this.RaisePropertyChanged("ProgramSubGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramVersion {
            get {
                return this.ProgramVersionField;
            }
            set {
                if ((this.ProgramVersionField.Equals(value) != true)) {
                    this.ProgramVersionField = value;
                    this.RaisePropertyChanged("ProgramVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SlaveID {
            get {
                return this.SlaveIDField;
            }
            set {
                if ((this.SlaveIDField.Equals(value) != true)) {
                    this.SlaveIDField = value;
                    this.RaisePropertyChanged("SlaveID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SlotID {
            get {
                return this.SlotIDField;
            }
            set {
                if ((this.SlotIDField.Equals(value) != true)) {
                    this.SlotIDField = value;
                    this.RaisePropertyChanged("SlotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStats", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class UserStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegisteredUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.UserStatOne> Top10blackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.UserStatOne> Top10cashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<hackerWorldNS.HackerWorldService.UserStatOne> Top10whiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegisteredUsers {
            get {
                return this.RegisteredUsersField;
            }
            set {
                if ((this.RegisteredUsersField.Equals(value) != true)) {
                    this.RegisteredUsersField = value;
                    this.RaisePropertyChanged("RegisteredUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.UserStatOne> Top10black {
            get {
                return this.Top10blackField;
            }
            set {
                if ((object.ReferenceEquals(this.Top10blackField, value) != true)) {
                    this.Top10blackField = value;
                    this.RaisePropertyChanged("Top10black");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.UserStatOne> Top10cash {
            get {
                return this.Top10cashField;
            }
            set {
                if ((object.ReferenceEquals(this.Top10cashField, value) != true)) {
                    this.Top10cashField = value;
                    this.RaisePropertyChanged("Top10cash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<hackerWorldNS.HackerWorldService.UserStatOne> Top10white {
            get {
                return this.Top10whiteField;
            }
            set {
                if ((object.ReferenceEquals(this.Top10whiteField, value) != true)) {
                    this.Top10whiteField = value;
                    this.RaisePropertyChanged("Top10white");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStatOne", Namespace="http://schemas.datacontract.org/2004/07/hackerWorldService")]
    [System.SerializableAttribute()]
    public partial class UserStatOne : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HackerWorldService.IhackerWorldService")]
    public interface IhackerWorldService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/RegisterUser", ReplyAction="http://tempuri.org/IhackerWorldService/RegisterUserResponse")]
        string RegisterUser(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/sendPassword", ReplyAction="http://tempuri.org/IhackerWorldService/sendPasswordResponse")]
        string sendPassword(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/Login", ReplyAction="http://tempuri.org/IhackerWorldService/LoginResponse")]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/changePassword", ReplyAction="http://tempuri.org/IhackerWorldService/changePasswordResponse")]
        string changePassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/deleteHDDItem", ReplyAction="http://tempuri.org/IhackerWorldService/deleteHDDItemResponse")]
        string deleteHDDItem(string sessionID, int hddSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/deleteCPUItem", ReplyAction="http://tempuri.org/IhackerWorldService/deleteCPUItemResponse")]
        string deleteCPUItem(string sessionID, int cpuSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/deleteMission", ReplyAction="http://tempuri.org/IhackerWorldService/deleteMissionResponse")]
        string deleteMission(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getHDDInfo", ReplyAction="http://tempuri.org/IhackerWorldService/getHDDInfoResponse")]
        hackerWorldNS.HackerWorldService.HardDrive getHDDInfo(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getCPUInfo", ReplyAction="http://tempuri.org/IhackerWorldService/getCPUInfoResponse")]
        hackerWorldNS.HackerWorldService.CPUload getCPUInfo(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getProgramTypes", ReplyAction="http://tempuri.org/IhackerWorldService/getProgramTypesResponse")]
        hackerWorldNS.HackerWorldService.ProgramTypes getProgramTypes(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getCompilerJob", ReplyAction="http://tempuri.org/IhackerWorldService/getCompilerJobResponse")]
        hackerWorldNS.HackerWorldService.CompilerJob getCompilerJob(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getUserInfo", ReplyAction="http://tempuri.org/IhackerWorldService/getUserInfoResponse")]
        hackerWorldNS.HackerWorldService.UserInfo getUserInfo(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getMissionList", ReplyAction="http://tempuri.org/IhackerWorldService/getMissionListResponse")]
        hackerWorldNS.HackerWorldService.MissionList getMissionList(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getUserMission", ReplyAction="http://tempuri.org/IhackerWorldService/getUserMissionResponse")]
        hackerWorldNS.HackerWorldService.UserMission getUserMission(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getSlaves", ReplyAction="http://tempuri.org/IhackerWorldService/getSlavesResponse")]
        hackerWorldNS.HackerWorldService.SlaveListHW getSlaves(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/getStats", ReplyAction="http://tempuri.org/IhackerWorldService/getStatsResponse")]
        hackerWorldNS.HackerWorldService.UserStats getStats(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/checkClientVersion", ReplyAction="http://tempuri.org/IhackerWorldService/checkClientVersionResponse")]
        string checkClientVersion(string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/purchaseFromMarket", ReplyAction="http://tempuri.org/IhackerWorldService/purchaseFromMarketResponse")]
        string purchaseFromMarket(string sessionID, hackerWorldNS.HackerWorldService.ProgramHW software);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/swapProgsHDD", ReplyAction="http://tempuri.org/IhackerWorldService/swapProgsHDDResponse")]
        string swapProgsHDD(string sessionID, int slotA, int slotB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/addCPUprogram", ReplyAction="http://tempuri.org/IhackerWorldService/addCPUprogramResponse")]
        string addCPUprogram(string sessionID, hackerWorldNS.HackerWorldService.ProgramHW program, int slot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/addCompilerJob", ReplyAction="http://tempuri.org/IhackerWorldService/addCompilerJobResponse")]
        string addCompilerJob(string sessionID, hackerWorldNS.HackerWorldService.CompilerJob job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/addHDDslot", ReplyAction="http://tempuri.org/IhackerWorldService/addHDDslotResponse")]
        string addHDDslot(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/addCPUslot", ReplyAction="http://tempuri.org/IhackerWorldService/addCPUslotResponse")]
        string addCPUslot(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/addMission", ReplyAction="http://tempuri.org/IhackerWorldService/addMissionResponse")]
        string addMission(string sessionID, hackerWorldNS.HackerWorldService.UserMission mission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/claimCompilerJob", ReplyAction="http://tempuri.org/IhackerWorldService/claimCompilerJobResponse")]
        string claimCompilerJob(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/claimMission", ReplyAction="http://tempuri.org/IhackerWorldService/claimMissionResponse")]
        string claimMission(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/claimDonation", ReplyAction="http://tempuri.org/IhackerWorldService/claimDonationResponse")]
        string claimDonation(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/setSlave", ReplyAction="http://tempuri.org/IhackerWorldService/setSlaveResponse")]
        string setSlave(string sessionID, hackerWorldNS.HackerWorldService.Slave slave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/deleteSlave", ReplyAction="http://tempuri.org/IhackerWorldService/deleteSlaveResponse")]
        string deleteSlave(string sessionID, int slaveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IhackerWorldService/decrementHDDuses", ReplyAction="http://tempuri.org/IhackerWorldService/decrementHDDusesResponse")]
        string decrementHDDuses(string sessionID, hackerWorldNS.HackerWorldService.ProgramHW program);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IhackerWorldServiceChannel : hackerWorldNS.HackerWorldService.IhackerWorldService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IhackerWorldServiceClient : System.ServiceModel.ClientBase<hackerWorldNS.HackerWorldService.IhackerWorldService>, hackerWorldNS.HackerWorldService.IhackerWorldService {
        
        public IhackerWorldServiceClient() {
        }
        
        public IhackerWorldServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IhackerWorldServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IhackerWorldServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IhackerWorldServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RegisterUser(string username, string password, string email) {
            return base.Channel.RegisterUser(username, password, email);
        }
        
        public string sendPassword(string email) {
            return base.Channel.sendPassword(email);
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public string changePassword(string username, string password) {
            return base.Channel.changePassword(username, password);
        }
        
        public string deleteHDDItem(string sessionID, int hddSlot) {
            return base.Channel.deleteHDDItem(sessionID, hddSlot);
        }
        
        public string deleteCPUItem(string sessionID, int cpuSlot) {
            return base.Channel.deleteCPUItem(sessionID, cpuSlot);
        }
        
        public string deleteMission(string sessionID) {
            return base.Channel.deleteMission(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.HardDrive getHDDInfo(string sessionID) {
            return base.Channel.getHDDInfo(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.CPUload getCPUInfo(string sessionID) {
            return base.Channel.getCPUInfo(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.ProgramTypes getProgramTypes(string sessionID) {
            return base.Channel.getProgramTypes(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.CompilerJob getCompilerJob(string sessionID) {
            return base.Channel.getCompilerJob(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.UserInfo getUserInfo(string sessionID) {
            return base.Channel.getUserInfo(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.MissionList getMissionList(string sessionID) {
            return base.Channel.getMissionList(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.UserMission getUserMission(string sessionID) {
            return base.Channel.getUserMission(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.SlaveListHW getSlaves(string sessionID) {
            return base.Channel.getSlaves(sessionID);
        }
        
        public hackerWorldNS.HackerWorldService.UserStats getStats(string sessionID) {
            return base.Channel.getStats(sessionID);
        }
        
        public string checkClientVersion(string version) {
            return base.Channel.checkClientVersion(version);
        }
        
        public string purchaseFromMarket(string sessionID, hackerWorldNS.HackerWorldService.ProgramHW software) {
            return base.Channel.purchaseFromMarket(sessionID, software);
        }
        
        public string swapProgsHDD(string sessionID, int slotA, int slotB) {
            return base.Channel.swapProgsHDD(sessionID, slotA, slotB);
        }
        
        public string addCPUprogram(string sessionID, hackerWorldNS.HackerWorldService.ProgramHW program, int slot) {
            return base.Channel.addCPUprogram(sessionID, program, slot);
        }
        
        public string addCompilerJob(string sessionID, hackerWorldNS.HackerWorldService.CompilerJob job) {
            return base.Channel.addCompilerJob(sessionID, job);
        }
        
        public string addHDDslot(string sessionID) {
            return base.Channel.addHDDslot(sessionID);
        }
        
        public string addCPUslot(string sessionID) {
            return base.Channel.addCPUslot(sessionID);
        }
        
        public string addMission(string sessionID, hackerWorldNS.HackerWorldService.UserMission mission) {
            return base.Channel.addMission(sessionID, mission);
        }
        
        public string claimCompilerJob(string sessionID) {
            return base.Channel.claimCompilerJob(sessionID);
        }
        
        public string claimMission(string sessionID) {
            return base.Channel.claimMission(sessionID);
        }
        
        public string claimDonation(string sessionID) {
            return base.Channel.claimDonation(sessionID);
        }
        
        public string setSlave(string sessionID, hackerWorldNS.HackerWorldService.Slave slave) {
            return base.Channel.setSlave(sessionID, slave);
        }
        
        public string deleteSlave(string sessionID, int slaveID) {
            return base.Channel.deleteSlave(sessionID, slaveID);
        }
        
        public string decrementHDDuses(string sessionID, hackerWorldNS.HackerWorldService.ProgramHW program) {
            return base.Channel.decrementHDDuses(sessionID, program);
        }
    }
}
